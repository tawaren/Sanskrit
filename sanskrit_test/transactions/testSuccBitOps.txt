signed(A) transaction{
   a = lit 5:$u8;
   b = lit 3:$u8;
   c = lit 1:$u8;
   c2 = call BitOps.And(a,b);
   () = call Helpers.AssertEqU8(c,c2);
};

signed(A) transaction{
   a = lit 0x00FF00FF00FF00FF:$data;
   b = lit 0x0000FFFF0000FFFF:$data;
   c = lit 0x000000FF000000FF:$data;
   c2 = call BitOps.And2(a,b);
   () = call Helpers.AssertEqData8(c,c2);
};

signed(A) transaction{
   a = lit 5:$u8;
   b = lit 3:$u8;
   c = lit 7:$u8;
   c2 = call BitOps.Or(a,b);
   () = call Helpers.AssertEqU8(c,c2);
};

signed(A) transaction{
   a = lit 0x00FF00FF00FF00FF:$data;
   b = lit 0x0000FFFF0000FFFF:$data;
   c = lit 0x00FFFFFF00FFFFFF:$data;
   c2 = call BitOps.Or2(a,b);
   () = call Helpers.AssertEqData8(c,c2);
};

signed(A) transaction{
   a = lit 5:$u8;
   b = lit 3:$u8;
   c = lit 6:$u8;
   c2 = call BitOps.Xor(a,b);
   () = call Helpers.AssertEqU8(c,c2);
};

signed(A) transaction{
   a = lit 0x00FF00FF00FF00FF:$data;
   b = lit 0x0000FFFF0000FFFF:$data;
   c = lit 0x00FFFF0000FFFF00:$data;
   c2 = call BitOps.Xor2(a,b);
   () = call Helpers.AssertEqData8(c,c2);
};

signed(A) transaction{
   a = lit 1:$u8;
   c = lit 254:$u8;
   c2 = call BitOps.Not(a);
   () = call Helpers.AssertEqU8(c,c2);
};

signed(A) transaction{
   a = lit 0x00FF00FF00FF00FF:$data;
   c = lit 0xFF00FF00FF00FF00:$data;
   c2 = call BitOps.Not2(a);
   () = call Helpers.AssertEqData8(c,c2);
};

signed(A) transaction{
   a = lit 0x0000000000000100:$data;
   b = lit 8:$u8;
   c = call BitOps.GetBit(a,b);
   () = call Helpers.AssertTrue(c);
};

signed(A) transaction{
   a = lit 0x0000000000000000:$data;
   b = lit 64:$u16;
   c = call BitOps.ErrorGetBit(a,b);
   () = call Helpers.AssertTrue(c);
};

signed(A) transaction{
   a = lit 0x1111111111101111:$data;
   a2 = lit 0x1111111110111111:$data;
   b = lit 16:$u8;
   b2 = lit 24:$u8;
   c = call BitOps.GetBit(a,b);
   c2 = call BitOps.GetBit(a2,b2);
   () = call Helpers.AssertEqBool(c,c2);
};

signed(A) transaction{
   a = lit 0x0000000000000000:$data;
   b = lit 8:$u8;
   c = lit 0x0000000000000100:$data;
   c2 = call BitOps.SetBit(a,b);
   () = call Helpers.AssertEqData8(c,c2);
};

signed(A) transaction{
   a = lit 0x0000000000000000:$data;
   b = lit 64:$u16;
   c = call BitOps.ErrorSetBit(a,b);
   () = call Helpers.AssertTrue(c);
};

signed(A) transaction{
   a = lit 0x1111111111111111:$data;
   b = lit 16:$u8;
   c = lit 0x1111111111101111:$data;
   c2 = call BitOps.UnSetBit(a,b);
   () = call Helpers.AssertEqData8(c,c2);
};

signed(A) transaction{
   a = lit 0x1111111111111111:$data;
   b = lit 64:$u16;
   c = call BitOps.ErrorUnSetBit(a,b);
   () = call Helpers.AssertTrue(c);
};