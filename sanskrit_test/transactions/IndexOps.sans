module IndexOps {
    public fun GenId[phantom T](consume in:System.Singleton[T]):(out:$privateId) {
        out = unpack in:System.Singleton[T];
        return out;
    };

    public fun ToRef(a:$privateId):(b:$publicId) {
        b = call $GenPublicId[$privateId](a);
        return b;
    };

    public fun ToRef2(a:$data20):(b:$publicId) {
        b = call $GenPublicId[$data20](a);
        return b;
    };

    public fun ToData(a:$publicId):(c:$data20) {
        c = call $ToData[$publicId,$data20](a);
        return c;
    };

    public fun ToData2(a:$privateId):(c:$data20) {
        c = call $ToData[$privateId,$data20](a);
        return c;
    };

    public fun DeriveIndex(a:$privateId, b:$privateId):(c:$privateId) {
        c = call $DeriveId[$privateId,$privateId](a,b);
        return c;
    };

    public fun DeriveRef(a:$publicId, b:$publicId):(c:$publicId) {
        c = call $DeriveId[$publicId,$publicId](a,b);
        return c;
    };

    public fun ModIndex():(a:$privateId){
       a = moduleIndex;
       return a;
    };

    public fun ModIndex2():(b:$privateId){
       b = moduleIndex;
       return b;
    };
}