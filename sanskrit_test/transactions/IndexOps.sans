module IndexOps {

    public fun ToRef(a:Ids.PrivateId):(b:Ids.PublicId) {
        b = call Ids.privateToPublic(a);
        return b;
    };

    public fun ToRef2(a:Data.Data20):(b:Ids.PublicId) {
        b = call Ids.dataToPublic(a);
        return b;
    };

    public fun ToData(a:Ids.PublicId):(c:Data.Data20) {
        c = call Ids.publicToData(a);
        return c;
    };

    public fun ToData2(a:Ids.PrivateId):(c:Data.Data20) {
        c = call Ids.privateToData(a);
        return c;
    };

    public fun DeriveIndex(a:Ids.PrivateId, b:Ids.PrivateId):(c:Ids.PrivateId) {
        c = call Ids.derivePrivateIdPrivate(a,b);
        return c;
    };

    public fun DeriveRef(a:Ids.PublicId, b:Ids.PublicId):(c:Ids.PublicId) {
        c = call Ids.derivePublicIdPublic(a,b);
        return c;
    };

    public fun ModIndex():(a:Ids.PrivateId){
       a = call Ids.moduleId();
       return a;
    };

    public fun ModIndex2():(b:Ids.PrivateId){
       b = call Ids.moduleId();
       return b;
    };

    public fun GenIndex1(k:Data.Data1):(a:Ids.PrivateId){
       a = call Ids.moduleId();
       return call Ids.derivePrivateId1(a,k);
    };

    public fun GenIndex2(k:Data.Data2):(a:Ids.PrivateId){
       a = call Ids.moduleId();
       return call Ids.derivePrivateId2(a,k);
    };

    public fun GenIndex4(k:Data.Data4):(a:Ids.PrivateId){
       a = call Ids.moduleId();
       return call Ids.derivePrivateId4(a,k);
    };
}