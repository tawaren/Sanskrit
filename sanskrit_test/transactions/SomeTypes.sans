module SomeTypes {

   public type <Copy,Drop,Persist,Primitive,Value,Unbound> Empty{
        Ctr();
   };

   public type <Copy,Drop,Persist,Primitive,Value,Unbound> NeedsCopy[<Copy> A]{
        Ctr();
   };

   public type <Copy,Drop,Persist,Primitive,Value,Unbound> NoArg[A]{
        Ctr();
    };

    public type <Copy,Drop,Persist,Primitive,Value,Unbound> FixU16{
        Ctr(IntU16.U16);
    };

    public type <Copy,Drop,Persist,Primitive,Value,Unbound> X[A]{
        Ctr(A);
    };

    public type <Copy,Drop,Persist,Primitive,Value,Unbound> Y[A]{
        Ctr(A);
    };

    public type <Copy,Drop,Persist,Primitive,Value,Unbound> Z[A, phantom B]{
        Ctr(A);
    };

    public type <Copy,Drop,Persist,Primitive,Value,Unbound> Dual[A]{
        Ctr1(A);
        Ctr2(A);
    };

    public type <Copy,Drop,Persist,Primitive,Value,Unbound> DuoType[A]{
        Ctr(A,A);
    };

    public(inspect,create) type <Copy,Drop,Persist,Value,Unbound> NoConsume[A]{
        Ctr(A);
    };

    public(consume,create) type <Copy,Drop,Persist,Value,Unbound> NoInspect[A]{
        Ctr(A);
    };

    public(consume,inspect) type <Copy,Drop,Persist,Value,Unbound> NoCreate[A]{
            Ctr(A);
    };

    public type <Drop,Persist,Value,Unbound> NoCopy[A]{
        Ctr(A);
    };

    public type <Copy,Persist,Value,Unbound> NoDrop[A]{
        Ctr(A);
    };

    public type <Copy,Drop,Value,Unbound>  NoPersist[A]{
        Ctr(A);
    };

    public type <Copy,Drop,Persist,Value,Unbound> NoPrimitive[A]{
        Ctr(A);
    };

    public(create) type <Drop> PhantomArg[phantom A]{
        Ctr();
    };

    public fun DeEntryNoDrop[<Unbound, Value, Persist> A](consume in:System.Entry[.NoDrop[A]]):(i:Ids.PrivateId,d:.NoDrop[A]) {
        return call System.UnpackEntry[.NoDrop[A]](in);
    };

}