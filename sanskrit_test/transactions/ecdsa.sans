system module Ecdsa {
    public extType(32) <Copy,Drop,Persist,Primitive,Value,Unbound> Pk;
    public extType(64) <Copy,Drop,Persist,Primitive,Value,Unbound> Sig;

    public extFun derivePublicId(pk:.Pk):(pub:Ids.PublicId);

    public extFun verify1(msg:Data.Data1, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify2(msg:Data.Data2, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify4(msg:Data.Data4, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify8(msg:Data.Data8, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify12(msg:Data.Data12, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify16(msg:Data.Data16, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify20(msg:Data.Data20, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify24(msg:Data.Data24, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify28(msg:Data.Data28, pk:.Pk, signature:.Sig):(res:Bool.Bool);
    public extFun verify32(msg:Data.Data32, pk:.Pk, signature:.Sig):(res:Bool.Bool);

    public fun verifyTx(ctx:System.Context, pk:.Pk, signature:.Sig):(res:Bool.Bool){
        hash = call System.TxTHash(ctx);
        return call .verify20(hash, pk, signature);
    };
}