transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.EqU8(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.EqU8(a,b);
};

transactional transaction{
   a = lit -30:IntI128.I128;
   b = lit -30:IntI128.I128;
   c = call CompareAndHashOps.EqI128(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit -30:IntI128.I128;
   b = lit -30:IntI128.I128;
  return call CompareAndHashOps.EqI128(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   ha = call CompareAndHashOps.HashU8(a);
   b = lit 5:IntU8.U8;
   hb = call CompareAndHashOps.HashU8(b);
   () = call Helpers.AssertEqData20(hb,ha);
};

transaction:(log res:Data.Data20){
   a = lit 5:IntU8.U8;
   return call CompareAndHashOps.HashU8(a);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   ha = call CompareAndHashOps.HashU8(a);
   b = lit 4:IntU8.U8;
   hb = call CompareAndHashOps.HashU8(b);
   () = call Helpers.AssertNotEqData20(hb,ha);
};


transactional transaction{
   a = lit 6:IntU8.U8;
   ha = call CompareAndHashOps.HashU8(a);
   haa = call CompareAndHashOps.HashData20(ha);
   () = call Helpers.AssertNotEqData20(haa,ha);
};

transactional transaction{
   a = lit 0x112233445566778899AABBCC:Data.Data12;
   ha = call CompareAndHashOps.PlainHash(a);
   b = lit 0x112233445566778899AABBCC:Data.Data12;
   hb = call CompareAndHashOps.PlainHash(b);
   () = call Helpers.AssertEqData20(hb,ha);
};

transaction:(log res:Data.Data20){
   a = lit 0x112233445566778899AABBCC:Data.Data12;
   return call CompareAndHashOps.PlainHash(a);
};

transactional transaction{
   a = lit 0x112233445566778899AABBCC:Data.Data12;
   ha = call CompareAndHashOps.PlainHash(a);
   b = lit 0xCCBBAA998877665544332211:Data.Data12;
   hb = call CompareAndHashOps.PlainHash(b);
   () = call Helpers.AssertNotEqData20(hb,ha);
};

transactional transaction{
   a = lit 1:IntU8.U8;
   b = lit 0x01:Data.Data1;
   c = call CompareAndHashOps.ToData(a);
   () = call Helpers.AssertEqData1(c,b);
};

transaction:(log res:Data.Data1){
   a = lit 1:IntU8.U8;
   return call CompareAndHashOps.ToData(a);
};

transactional transaction{
   a = lit 17:IntU8.U8;
   b = lit 0x11:Data.Data1;
   c = call CompareAndHashOps.ToData(a);
   () = call Helpers.AssertEqData1(c,b);
};

transaction:(log res:Data.Data1){
   a = lit 17:IntU8.U8;
   return call CompareAndHashOps.ToData(a);
};

transactional transaction{
   a = lit 1:IntU32.U32;
   b = lit 0x00000001:Data.Data4;
   c = call CompareAndHashOps.ToData2(a);
   () = call Helpers.AssertEqData4(c,b);
};

transaction:(log res:Data.Data4){
   a = lit 1:IntU32.U32;
   return call CompareAndHashOps.ToData2(a);
};

transactional transaction{
   a = lit 4096:IntU32.U32;
   b = lit 0x00001000:Data.Data4;
   c = call CompareAndHashOps.ToData2(a);
   () = call Helpers.AssertEqData4(c,b);
};

transaction:(log res:Data.Data4){
   a = lit 4096:IntU32.U32;
   return call CompareAndHashOps.ToData2(a);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   c = call CompareAndHashOps.Lt(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   return call CompareAndHashOps.Lt(a,b);
};

transactional transaction{
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Lt(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Lt(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Lt(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Lt(a,b);
};

transactional transaction{
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   c = call CompareAndHashOps.Lt2(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   return call CompareAndHashOps.Lt2(a,b);
};

transactional transaction{
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   c = call CompareAndHashOps.Lt2(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   return call CompareAndHashOps.Lt2(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   c = call CompareAndHashOps.Gt(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   return call CompareAndHashOps.Gt(a,b);
};

transactional transaction{
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Gt(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Gt(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Gt(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Gt(a,b);
};

transactional transaction{
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   c = call CompareAndHashOps.Gt2(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   return call CompareAndHashOps.Gt2(a,b);
};

transactional transaction{
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   c = call CompareAndHashOps.Gt2(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   return call CompareAndHashOps.Gt2(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   c = call CompareAndHashOps.Lte(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   return call CompareAndHashOps.Lte(a,b);
};

transactional transaction{
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Lte(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Lte(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Lte(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Lte(a,b);
};

transactional transaction{
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   c = call CompareAndHashOps.Lte2(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   return call CompareAndHashOps.Lte2(a,b);
};

transactional transaction{
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   c = call CompareAndHashOps.Lte2(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   return call CompareAndHashOps.Lte2(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   c = call CompareAndHashOps.Gte(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 6:IntU8.U8;
   return call CompareAndHashOps.Gte(a,b);
};

transactional transaction{
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Gte(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 6:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Gte(a,b);
};

transactional transaction{
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   c = call CompareAndHashOps.Gte(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 5:IntU8.U8;
   b = lit 5:IntU8.U8;
   return call CompareAndHashOps.Gte(a,b);
};

transactional transaction{
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   c = call CompareAndHashOps.Gte2(a,b);
   () = call Helpers.AssertFalse(c);
};

transaction:(log res:Bool.Bool){
   a = lit -1:IntI128.I128;
   b = lit 1:IntI128.I128;
   return call CompareAndHashOps.Gte2(a,b);
};

transactional transaction{
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   c = call CompareAndHashOps.Gte2(a,b);
   () = call Helpers.AssertTrue(c);
};

transaction:(log res:Bool.Bool){
   a = lit 1:IntI128.I128;
   b = lit -1:IntI128.I128;
   return call CompareAndHashOps.Gte2(a,b);
};