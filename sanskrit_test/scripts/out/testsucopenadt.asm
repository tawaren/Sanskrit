Module { byte_size: Some(146), meta: LargeVec([116, 101, 115, 116, 115, 117, 99, 111, 112, 101, 110, 97, 100, 116]), data: [DataComponent { byte_size: Some(10), create_scope: Global, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(3), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(10), create_scope: Global, consume_scope: Global, inspect_scope: Global, top: false, provided_caps: CapSet(63), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(14), create_scope: Global, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(51), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(15), create_scope: Global, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(51), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }, Case { fields: [] }, Case { fields: [] }, Case { fields: [] }, Case { fields: [] }] } }, DataComponent { byte_size: Some(15), create_scope: Global, consume_scope: Global, inspect_scope: Global, top: false, provided_caps: CapSet(51), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }, Case { fields: [] }] } }, DataComponent { byte_size: Some(18), create_scope: Global, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(51), generics: [Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }, Case { fields: [TypeRef(1)] }] } }, DataComponent { byte_size: Some(39), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 3 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 2 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 4 }, applies: [TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 5 }, applies: [TypeRef(0), TypeRef(2)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(0), TypeRef(3), TypeRef(4)] }] } }], sigs: [], data_sig_order: BitSerializedVec([true, true, true, true, true, true, true]), functions: [], implements: [], fun_impl_order: BitSerializedVec([]) }