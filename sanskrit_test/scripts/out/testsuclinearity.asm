Module { byte_size: Some(726), meta: LargeVec([116, 101, 115, 116, 115, 117, 99, 108, 105, 110, 101, 97, 114, 105, 116, 121]), data: [DataComponent { byte_size: Some(13), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }, Case { fields: [] }, Case { fields: [] }] } }], sigs: [], data_sig_order: BitSerializedVec([true]), functions: [FunctionComponent { byte_size: Some(31), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(18), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0)), Move(ValueRef(0)), Move(ValueRef(0)), Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(22), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(9), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(25), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(12), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Let(Exp(LargeVec([Move(ValueRef(0))])))])) } }, FunctionComponent { byte_size: Some(48), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(1) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(29), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(2), TypeRef(1))] }, code: Exp(LargeVec([Switch(ValueRef(0), PermRef(0), [Exp(LargeVec([Move(ValueRef(1))])), Exp(LargeVec([Move(ValueRef(1))])), Exp(LargeVec([Move(ValueRef(1))]))])])) } }, FunctionComponent { byte_size: Some(48), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: false, typ: TypeRef(1) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(29), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(4), TypeRef(1))] }, code: Exp(LargeVec([Inspect(ValueRef(0), PermRef(0), [Exp(LargeVec([Move(ValueRef(1))])), Exp(LargeVec([Move(ValueRef(1))])), Exp(LargeVec([Move(ValueRef(1))]))])])) } }, FunctionComponent { byte_size: Some(23), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(1))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [] }, body: Internal { byte_size: Some(11), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0)), Return([])])) } }, FunctionComponent { byte_size: Some(26), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(1))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [] }, body: Internal { byte_size: Some(14), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Let(Exp(LargeVec([Move(ValueRef(0)), Return([])])))])) } }, FunctionComponent { byte_size: Some(53), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(1))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(1) }], returns: [] }, body: Internal { byte_size: Some(35), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(2), TypeRef(1))] }, code: Exp(LargeVec([Switch(ValueRef(0), PermRef(0), [Exp(LargeVec([Move(ValueRef(1)), Return([])])), Exp(LargeVec([Move(ValueRef(1)), Return([])])), Exp(LargeVec([Move(ValueRef(1)), Return([])]))])])) } }, FunctionComponent { byte_size: Some(53), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(1))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: false, typ: TypeRef(1) }], returns: [] }, body: Internal { byte_size: Some(35), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(4), TypeRef(1))] }, code: Exp(LargeVec([Inspect(ValueRef(0), PermRef(0), [Exp(LargeVec([Move(ValueRef(1)), Return([])])), Exp(LargeVec([Move(ValueRef(1)), Return([])])), Exp(LargeVec([Move(ValueRef(1)), Return([])]))])])) } }, FunctionComponent { byte_size: Some(28), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0), TypeRef(0)] }, body: Internal { byte_size: Some(12), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([ValueRef(1), ValueRef(0)])])) } }, FunctionComponent { byte_size: Some(31), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0), TypeRef(0)] }, body: Internal { byte_size: Some(15), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Let(Exp(LargeVec([Return([ValueRef(1), ValueRef(0)])])))])) } }, FunctionComponent { byte_size: Some(60), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(1) }], returns: [TypeRef(0), TypeRef(0)] }, body: Internal { byte_size: Some(38), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(2), TypeRef(1))] }, code: Exp(LargeVec([Switch(ValueRef(0), PermRef(0), [Exp(LargeVec([Return([ValueRef(2), ValueRef(1)])])), Exp(LargeVec([Return([ValueRef(2), ValueRef(1)])])), Exp(LargeVec([Return([ValueRef(2), ValueRef(1)])]))])])) } }, FunctionComponent { byte_size: Some(60), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }, Param { consumes: false, typ: TypeRef(1) }], returns: [TypeRef(0), TypeRef(0)] }, body: Internal { byte_size: Some(38), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(4), TypeRef(1))] }, code: Exp(LargeVec([Inspect(ValueRef(0), PermRef(0), [Exp(LargeVec([Return([ValueRef(2), ValueRef(1)])])), Exp(LargeVec([Return([ValueRef(2), ValueRef(1)])])), Exp(LargeVec([Return([ValueRef(2), ValueRef(1)])]))])])) } }, FunctionComponent { byte_size: Some(27), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(49))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(12), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0)), Move(ValueRef(2))])) } }, FunctionComponent { byte_size: Some(30), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(49))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(15), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Let(Exp(LargeVec([Move(ValueRef(0)), Move(ValueRef(2))])))])) } }, FunctionComponent { byte_size: Some(59), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(49))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(1) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(38), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(2), TypeRef(1))] }, code: Exp(LargeVec([Switch(ValueRef(0), PermRef(0), [Exp(LargeVec([Move(ValueRef(1)), Move(ValueRef(3))])), Exp(LargeVec([Move(ValueRef(1)), Move(ValueRef(3))])), Exp(LargeVec([Move(ValueRef(1)), Move(ValueRef(3))]))])])) } }, FunctionComponent { byte_size: Some(59), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(49))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }, Param { consumes: true, typ: TypeRef(0) }, Param { consumes: false, typ: TypeRef(1) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(38), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(4), TypeRef(1))] }, code: Exp(LargeVec([Inspect(ValueRef(0), PermRef(0), [Exp(LargeVec([Move(ValueRef(1)), Move(ValueRef(3))])), Exp(LargeVec([Move(ValueRef(1)), Move(ValueRef(3))])), Exp(LargeVec([Move(ValueRef(1)), Move(ValueRef(3))]))])])) } }], implements: [], fun_impl_order: BitSerializedVec([true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]) }