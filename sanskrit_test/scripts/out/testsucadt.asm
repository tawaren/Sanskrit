Module { byte_size: Some(309), meta: LargeVec([116, 101, 115, 116, 115, 117, 99, 97, 100, 116]), data: [DataComponent { byte_size: Some(10), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(14), create_scope: Local, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(55), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(14), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(15), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }, Case { fields: [] }, Case { fields: [] }, Case { fields: [] }, Case { fields: [] }] } }, DataComponent { byte_size: Some(15), create_scope: Global, consume_scope: Global, inspect_scope: Global, top: false, provided_caps: CapSet(49), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }, Case { fields: [] }] } }, DataComponent { byte_size: Some(18), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }, Case { fields: [TypeRef(1)] }] } }, DataComponent { byte_size: Some(106), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(7), generics: [Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [Remote([234, 38, 0, 245, 96, 169, 166, 229, 82, 101, 166, 30, 113, 230, 122, 22, 201, 246, 208, 82]), Remote([138, 228, 177, 255, 46, 225, 156, 151, 166, 154, 230, 60, 161, 28, 20, 38, 107, 91, 2, 141])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [TypeRef(0), TypeRef(1)] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [TypeRef(0), TypeRef(1)] }, Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [TypeRef(1), TypeRef(4)] }, Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [TypeRef(1)] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [TypeRef(0), TypeRef(6)] }, Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [TypeRef(5), TypeRef(7)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(2)] }, Case { fields: [TypeRef(3)] }, Case { fields: [TypeRef(0)] }, Case { fields: [TypeRef(1)] }, Case { fields: [TypeRef(4)] }, Case { fields: [TypeRef(8)] }] } }, DataComponent { byte_size: Some(46), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 3 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 4 }, applies: [TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 5 }, applies: [TypeRef(0), TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(0), TypeRef(2)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(0), TypeRef(3), TypeRef(4), TypeRef(5)] }] } }, DataComponent { byte_size: Some(12), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(7))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(10), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(7), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(27), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(0), TypeRef(0)] }, Data { link: DataLink { module: ModRef(0), offset: 8 }, applies: [TypeRef(1)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(2)] }] } }], sigs: [], data_sig_order: BitSerializedVec([true, true, true, true, true, true, true, true, true, true, true]), functions: [], implements: [], fun_impl_order: BitSerializedVec([]) }