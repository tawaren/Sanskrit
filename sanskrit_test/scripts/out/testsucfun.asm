Module { byte_size: Some(186), meta: LargeVec([116, 101, 115, 116, 115, 117, 99, 102, 117, 110]), data: [DataComponent { byte_size: Some(10), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(50), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }], sigs: [], data_sig_order: BitSerializedVec([true]), functions: [FunctionComponent { byte_size: Some(22), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(9), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(16), scope: Local, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(20), scope: Guarded([GenRef(0)]), shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(24), scope: Guarded([GenRef(0)]), shared: FunSigShared { transactional: false, generics: [Physical(CapSet(32))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(9), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(35), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(50))], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: false, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(22), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 0 }, applies: [TypeRef(0)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Copy(ValueRef(0)), Invoke(PermRef(0), [ValueRef(0)])])) } }, FunctionComponent { byte_size: Some(37), scope: Local, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [Param { consumes: false, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(22), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 3 }, applies: [TypeRef(0)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Copy(ValueRef(0)), Invoke(PermRef(0), [ValueRef(0)])])) } }], implements: [], fun_impl_order: BitSerializedVec([true, true, true, true, true, true]) }