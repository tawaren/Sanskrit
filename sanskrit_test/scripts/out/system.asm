Module { byte_size: Some(561), meta: LargeVec([115, 121, 115, 116, 101, 109]), data: [DataComponent { byte_size: Some(39), create_scope: Global, consume_scope: Local, inspect_scope: Local, top: true, provided_caps: CapSet(51), generics: [Physical(CapSet(4))], import: PublicImport { modules: [Remote([195, 222, 179, 223, 220, 217, 114, 2, 53, 186, 144, 26, 89, 75, 52, 75, 34, 193, 109, 227])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(0)] }] } }, DataComponent { byte_size: Some(87), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: true, provided_caps: CapSet(49), generics: [], import: PublicImport { modules: [Remote([195, 222, 179, 223, 220, 217, 114, 2, 53, 186, 144, 26, 89, 75, 52, 75, 34, 193, 109, 227]), Remote([85, 48, 23, 173, 213, 179, 31, 97, 39, 177, 216, 96, 129, 139, 61, 224, 110, 26, 121, 72]), Remote([106, 108, 159, 253, 27, 185, 140, 242, 220, 94, 146, 115, 36, 199, 149, 27, 232, 96, 87, 127])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(2), offset: 6 }, applies: [] }, Data { link: DataLink { module: ModRef(3), offset: 0 }, applies: [] }] }, body: Internal { constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(2)] }] } }], sigs: [], data_sig_order: BitSerializedVec([true, true]), functions: [FunctionComponent { byte_size: Some(88), scope: Global, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [Remote([195, 222, 179, 223, 220, 217, 114, 2, 53, 186, 144, 26, 89, 75, 52, 75, 34, 193, 109, 227]), Remote([85, 48, 23, 173, 213, 179, 31, 97, 39, 177, 216, 96, 129, 139, 61, 224, 110, 26, 121, 72])], types: [Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [] }, Data { link: DataLink { module: ModRef(2), offset: 6 }, applies: [] }] }, params: [Param { consumes: false, typ: TypeRef(0) }], returns: [TypeRef(1)] }, body: Internal { byte_size: Some(29), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(1), offset: 3 }, applies: [] }], permissions: [Type(PermSet(4), TypeRef(0)), Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([CopyField(ValueRef(0), PermRef(0), 0), Invoke(PermRef(1), [ValueRef(0)]), Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(56), scope: Global, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [Remote([85, 48, 23, 173, 213, 179, 31, 97, 39, 177, 216, 96, 129, 139, 61, 224, 110, 26, 121, 72])], types: [Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [] }, Data { link: DataLink { module: ModRef(1), offset: 6 }, applies: [] }] }, params: [Param { consumes: false, typ: TypeRef(0) }], returns: [TypeRef(1)] }, body: Internal { byte_size: Some(17), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(4), TypeRef(0))] }, code: Exp(LargeVec([CopyField(ValueRef(0), PermRef(0), 1), Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(56), scope: Global, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [Remote([106, 108, 159, 253, 27, 185, 140, 242, 220, 94, 146, 115, 36, 199, 149, 27, 232, 96, 87, 127])], types: [Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [] }, Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }] }, params: [Param { consumes: false, typ: TypeRef(0) }], returns: [TypeRef(1)] }, body: Internal { byte_size: Some(17), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(4), TypeRef(0))] }, code: Exp(LargeVec([CopyField(ValueRef(0), PermRef(0), 2), Move(ValueRef(0))])) } }, FunctionComponent { byte_size: Some(153), scope: Global, shared: FunSigShared { transactional: true, generics: [], import: PublicImport { modules: [Remote([106, 108, 159, 253, 27, 185, 140, 242, 220, 94, 146, 115, 36, 199, 149, 27, 232, 96, 87, 127]), Remote([195, 222, 179, 223, 220, 217, 114, 2, 53, 186, 144, 26, 89, 75, 52, 75, 34, 193, 109, 227])], types: [Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [] }, Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(2), TypeRef(0)] }, body: Internal { byte_size: Some(89), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(1), offset: 13 }, applies: [] }, Function { link: FuncLink { module: ModRef(2), offset: 13 }, applies: [] }, Function { link: FuncLink { module: ModRef(1), offset: 5 }, applies: [] }], permissions: [Type(PermSet(2), TypeRef(0)), Callable(PermSet(8), CallRef(0)), Callable(PermSet(8), CallRef(1)), Type(PermSet(1), TypeRef(1)), Callable(PermSet(8), CallRef(2)), Type(PermSet(1), TypeRef(0))] }, code: Exp(LargeVec([Unpack(ValueRef(0), PermRef(0)), Invoke(PermRef(1), [ValueRef(0)]), Invoke(PermRef(2), [ValueRef(4), ValueRef(0)]), Lit(LargeVec([0, 0, 0, 0, 0, 0, 0, 1]), PermRef(3)), Invoke(PermRef(4), [ValueRef(3), ValueRef(0)]), Pack(PermRef(5), Tag(0), [ValueRef(7), ValueRef(6), ValueRef(5), ValueRef(0)]), Return([ValueRef(3), ValueRef(0)])])) } }, FunctionComponent { byte_size: Some(64), scope: Guarded([GenRef(0)]), shared: FunSigShared { transactional: false, generics: [Physical(CapSet(52))], import: PublicImport { modules: [Remote([195, 222, 179, 223, 220, 217, 114, 2, 53, 186, 144, 26, 89, 75, 52, 75, 34, 193, 109, 227])], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }] }, params: [Param { consumes: true, typ: TypeRef(1) }], returns: [TypeRef(2), TypeRef(0)] }, body: Internal { byte_size: Some(19), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(2), TypeRef(1))] }, code: Exp(LargeVec([Unpack(ValueRef(0), PermRef(0)), Return([ValueRef(1), ValueRef(0)])])) } }], implements: [], fun_impl_order: BitSerializedVec([true, true, true, true, true]) }