Module { byte_size: Some(127), meta: LargeVec([116, 101, 115, 116, 102, 97, 105, 108, 112, 97, 99, 107, 116, 121, 112, 101]), data: [DataComponent { byte_size: Some(14), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }], sigs: [], data_sig_order: BitSerializedVec([true]), functions: [FunctionComponent { byte_size: Some(85), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48))], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132]), Remote([228, 163, 84, 80, 224, 58, 10, 212, 239, 113, 11, 55, 180, 196, 49, 209, 161, 112, 169, 187])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [TypeRef(1)] }, Data { link: DataLink { module: ModRef(2), offset: 1 }, applies: [TypeRef(0)] }] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(3)] }, body: Internal { byte_size: Some(18), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [Type(PermSet(1), TypeRef(2))] }, code: Exp(LargeVec([Pack(PermRef(0), Tag(0), [ValueRef(0)]), Move(ValueRef(0))])) } }], implements: [], fun_impl_order: BitSerializedVec([true]) }