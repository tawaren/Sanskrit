Module { meta: LargeVec([116, 101, 115, 116, 83, 117, 99, 86, 97, 108, 105, 100, 97, 116, 101]), adts: [AdtComponent { provided_caps: CapSet(24), generics: [], import: PublicImport { modules: [], errors: [], types: [] }, constructors: [] }, AdtComponent { provided_caps: CapSet(32), generics: [Physical(CapSet(0)), Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [], errors: [], types: [] }, constructors: [] }, AdtComponent { provided_caps: CapSet(32), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], errors: [], types: [] }, constructors: [] }, AdtComponent { provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [], errors: [], types: [Generic(GenRef(1)), Generic(GenRef(0)), Real(Native(UInt(1)), []), Real(Module(AdtLink { module: ModRef(0), offset: 1 }), [TypeRef(0), TypeRef(1), TypeRef(2)]), Real(Module(AdtLink { module: ModRef(0), offset: 2 }), [TypeRef(1)])] }, constructors: [Case { fields: [TypeRef(3)] }, Case { fields: [TypeRef(4)] }] }, AdtComponent { provided_caps: CapSet(32), generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [], errors: [], types: [] }, constructors: [] }, AdtComponent { provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0)), Generic(GenRef(1)), Real(Module(AdtLink { module: ModRef(0), offset: 4 }), [TypeRef(0), TypeRef(1)]), Real(Native(UInt(1)), []), Real(Native(UInt(2)), []), Real(Module(AdtLink { module: ModRef(0), offset: 4 }), [TypeRef(3), TypeRef(4)]), Real(Module(AdtLink { module: ModRef(0), offset: 4 }), [TypeRef(0), TypeRef(0)])] }, constructors: [Case { fields: [TypeRef(2)] }, Case { fields: [TypeRef(5)] }, Case { fields: [TypeRef(6)] }] }, AdtComponent { provided_caps: CapSet(32), generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(19)), Physical(CapSet(27))], import: PublicImport { modules: [], errors: [], types: [] }, constructors: [] }, AdtComponent { provided_caps: CapSet(0), generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(19)), Physical(CapSet(27))], import: PublicImport { modules: [], errors: [], types: [Generic(GenRef(3)), Real(Module(AdtLink { module: ModRef(0), offset: 6 }), [TypeRef(0), TypeRef(0), TypeRef(0), TypeRef(0)]), Generic(GenRef(2)), Real(Module(AdtLink { module: ModRef(0), offset: 6 }), [TypeRef(2), TypeRef(2), TypeRef(2), TypeRef(0)]), Generic(GenRef(1)), Real(Module(AdtLink { module: ModRef(0), offset: 6 }), [TypeRef(4), TypeRef(4), TypeRef(2), TypeRef(0)]), Generic(GenRef(0)), Real(Module(AdtLink { module: ModRef(0), offset: 6 }), [TypeRef(6), TypeRef(4), TypeRef(2), TypeRef(0)]), Real(Native(UInt(1)), []), Real(Native(UInt(2)), []), Real(Module(AdtLink { module: ModRef(0), offset: 6 }), [TypeRef(8), TypeRef(9), TypeRef(2), TypeRef(0)])] }, constructors: [Case { fields: [TypeRef(1)] }, Case { fields: [TypeRef(3)] }, Case { fields: [TypeRef(5)] }, Case { fields: [TypeRef(7)] }, Case { fields: [TypeRef(10)] }] }, AdtComponent { provided_caps: CapSet(0), generics: [Physical(CapSet(32)), Phantom], import: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0))] }, constructors: [Case { fields: [TypeRef(0)] }] }, AdtComponent { provided_caps: CapSet(39), generics: [], import: PublicImport { modules: [], errors: [], types: [] }, constructors: [Case { fields: [] }] }, AdtComponent { provided_caps: CapSet(39), generics: [Physical(CapSet(32))], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Generic(GenRef(0))] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1)] }] }, AdtComponent { provided_caps: CapSet(35), generics: [], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 10 }), [TypeRef(0)])] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1)] }] }, AdtComponent { provided_caps: CapSet(35), generics: [Physical(CapSet(32))], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 11 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 10 }), [TypeRef(1)]), Generic(GenRef(0))] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3)] }] }, AdtComponent { provided_caps: CapSet(33), generics: [], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 11 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 12 }), [TypeRef(0)]), Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 10 }), [TypeRef(2)])] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3)] }] }, AdtComponent { provided_caps: CapSet(33), generics: [Physical(CapSet(32))], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 13 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 11 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 12 }), [TypeRef(1)]), Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 10 }), [TypeRef(3)]), Generic(GenRef(0))] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(4), TypeRef(5)] }] }, AdtComponent { provided_caps: CapSet(32), generics: [], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 13 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 14 }), [TypeRef(0)]), Real(Module(AdtLink { module: ModRef(0), offset: 11 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 12 }), [TypeRef(2)]), Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 10 }), [TypeRef(4)])] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(4), TypeRef(5)] }] }, AdtComponent { provided_caps: CapSet(32), generics: [Physical(CapSet(32))], import: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 15 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 13 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 14 }), [TypeRef(1)]), Real(Module(AdtLink { module: ModRef(0), offset: 11 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 12 }), [TypeRef(3)]), Real(Module(AdtLink { module: ModRef(0), offset: 9 }), []), Real(Module(AdtLink { module: ModRef(0), offset: 10 }), [TypeRef(5)]), Generic(GenRef(0))] }, constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(4), TypeRef(5), TypeRef(6), TypeRef(7)] }] }], functions: [FunctionComponent { generics: [Physical(CapSet(0))], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [] }, functions: [] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0)), Physical(CapSet(0)), Physical(CapSet(0))], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [] }, functions: [] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0)), Physical(CapSet(0))], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0)), Generic(GenRef(1)), Real(Native(UInt(1)), [])] }, functions: [Module(FuncLink { module: ModRef(0), offset: 0 }, [TypeRef(0)]), Module(FuncLink { module: ModRef(0), offset: 1 }, [TypeRef(1), TypeRef(0), TypeRef(2)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), []), Invoke(FuncRef(1), [])]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0)), Phantom], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [] }, functions: [] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0)), Phantom], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0)), Generic(GenRef(1))] }, functions: [Module(FuncLink { module: ModRef(0), offset: 3 }, [TypeRef(0), TypeRef(1)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), [])]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0))], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0))] }, functions: [Module(FuncLink { module: ModRef(0), offset: 3 }, [TypeRef(0), TypeRef(0)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), [])]), [], []) }, FunctionComponent { generics: [], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Real(Native(UInt(1)), [])] }, functions: [Module(FuncLink { module: ModRef(0), offset: 3 }, [TypeRef(0), TypeRef(0)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), [])]), [], []) }, FunctionComponent { generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(19)), Physical(CapSet(27))], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [] }, functions: [] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([]), [], []) }, FunctionComponent { generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(19)), Physical(CapSet(27))], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Generic(GenRef(3)), Generic(GenRef(2)), Generic(GenRef(1)), Generic(GenRef(0)), Real(Native(UInt(1)), []), Real(Native(UInt(2)), [])] }, functions: [Module(FuncLink { module: ModRef(0), offset: 7 }, [TypeRef(0), TypeRef(0), TypeRef(0), TypeRef(0)]), Module(FuncLink { module: ModRef(0), offset: 7 }, [TypeRef(1), TypeRef(1), TypeRef(1), TypeRef(0)]), Module(FuncLink { module: ModRef(0), offset: 7 }, [TypeRef(2), TypeRef(2), TypeRef(1), TypeRef(0)]), Module(FuncLink { module: ModRef(0), offset: 7 }, [TypeRef(3), TypeRef(2), TypeRef(1), TypeRef(0)]), Module(FuncLink { module: ModRef(0), offset: 7 }, [TypeRef(4), TypeRef(5), TypeRef(1), TypeRef(0)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), []), Invoke(FuncRef(1), []), Invoke(FuncRef(2), []), Invoke(FuncRef(3), []), Invoke(FuncRef(4), [])]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0))], visibility: Protected([GenRef(0)]), import: BodyImport { base: PublicImport { modules: [], errors: [], types: [] }, functions: [] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([]), [], []) }, FunctionComponent { generics: [], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 0 }), [])] }, functions: [Module(FuncLink { module: ModRef(0), offset: 9 }, [TypeRef(0)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), [])]), [], []) }, FunctionComponent { generics: [], visibility: Public, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Real(Module(AdtLink { module: ModRef(0), offset: 0 }), [])] }, functions: [Module(FuncLink { module: ModRef(0), offset: 9 }, [TypeRef(0)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), [])]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0))], visibility: Protected([GenRef(0)]), import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0))] }, functions: [Module(FuncLink { module: ModRef(0), offset: 9 }, [TypeRef(0)])] }, risk: {}, params: [], returns: [], code: Ret(LargeVec([Invoke(FuncRef(0), [])]), [], []) }, FunctionComponent { generics: [Physical(CapSet(0)), Phantom], visibility: Private, import: BodyImport { base: PublicImport { modules: [], errors: [], types: [Generic(GenRef(0))] }, functions: [] }, risk: {}, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [Ret { borrows: [], typ: TypeRef(0) }], code: Ret(LargeVec([Fetch(ValueRef(0))]), [ValueRef(0)], []) }], errors: 0 }