Module { byte_size: Some(1122), meta: LargeVec([116, 101, 115, 116, 115, 117, 99, 118, 97, 108, 105, 100, 97, 116, 101]), data: [DataComponent { byte_size: Some(10), create_scope: Local, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(16), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(12), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(54), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [TypeRef(1), TypeRef(0), TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 2 }, applies: [TypeRef(0)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(3)] }, Case { fields: [TypeRef(4)] }] } }, DataComponent { byte_size: Some(13), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(85), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132]), Remote([212, 105, 64, 55, 22, 136, 64, 51, 174, 234, 236, 219, 216, 73, 76, 49, 192, 85, 152, 81])], types: [Data { link: DataLink { module: ModRef(0), offset: 4 }, applies: [TypeRef(0), TypeRef(1)] }, Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 4 }, applies: [TypeRef(3), TypeRef(4)] }, Data { link: DataLink { module: ModRef(0), offset: 4 }, applies: [TypeRef(0), TypeRef(0)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(2)] }, Case { fields: [TypeRef(5)] }, Case { fields: [TypeRef(6)] }] } }, DataComponent { byte_size: Some(18), create_scope: Local, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(3)), Physical(CapSet(3))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [] } }, DataComponent { byte_size: Some(116), create_scope: Local, consume_scope: Global, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(3)), Physical(CapSet(3))], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132]), Remote([212, 105, 64, 55, 22, 136, 64, 51, 174, 234, 236, 219, 216, 73, 76, 49, 192, 85, 152, 81])], types: [Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(3), TypeRef(3), TypeRef(3), TypeRef(3)] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(2), TypeRef(2), TypeRef(2), TypeRef(3)] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(1), TypeRef(1), TypeRef(2), TypeRef(3)] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3)] }, Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(8), TypeRef(9), TypeRef(2), TypeRef(3)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(4)] }, Case { fields: [TypeRef(5)] }, Case { fields: [TypeRef(6)] }, Case { fields: [TypeRef(7)] }, Case { fields: [TypeRef(10)] }] } }, DataComponent { byte_size: Some(15), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(11), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(55), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(19), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(55), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(0)] }] } }, DataComponent { byte_size: Some(22), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(51), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 10 }, applies: [TypeRef(0)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(0), TypeRef(1)] }] } }, DataComponent { byte_size: Some(30), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(51), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 11 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 10 }, applies: [TypeRef(2)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(0)] }] } }, DataComponent { byte_size: Some(33), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(49), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 11 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 12 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 10 }, applies: [TypeRef(2)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3)] }] } }, DataComponent { byte_size: Some(41), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(49), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 13 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 11 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 12 }, applies: [TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 10 }, applies: [TypeRef(4)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(4), TypeRef(5), TypeRef(0)] }] } }, DataComponent { byte_size: Some(44), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 13 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 14 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(0), offset: 11 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 12 }, applies: [TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 10 }, applies: [TypeRef(4)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(4), TypeRef(5)] }] } }, DataComponent { byte_size: Some(52), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 15 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 13 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 14 }, applies: [TypeRef(2)] }, Data { link: DataLink { module: ModRef(0), offset: 11 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 12 }, applies: [TypeRef(4)] }, Data { link: DataLink { module: ModRef(0), offset: 9 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 10 }, applies: [TypeRef(6)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(1), TypeRef(2), TypeRef(3), TypeRef(4), TypeRef(5), TypeRef(6), TypeRef(7), TypeRef(0)] }] } }], sigs: [], data_sig_order: BitSerializedVec([true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]), functions: [FunctionComponent { byte_size: Some(18), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(22), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0)), Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(68), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0)), Physical(CapSet(0))], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }] }, params: [], returns: [] }, body: Internal { byte_size: Some(32), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 0 }, applies: [TypeRef(0)] }, Function { link: FuncLink { module: ModRef(0), offset: 1 }, applies: [TypeRef(1), TypeRef(0), TypeRef(2)] }], permissions: [Callable(PermSet(8), CallRef(0)), Callable(PermSet(8), CallRef(1))] }, code: Exp(LargeVec([Invoke(PermRef(0), []), Invoke(PermRef(1), []), Return([])])) } }, FunctionComponent { byte_size: Some(19), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(29), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0)), Phantom], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(18), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 3 }, applies: [TypeRef(0), TypeRef(1)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Invoke(PermRef(0), [])])) } }, FunctionComponent { byte_size: Some(28), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(18), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 3 }, applies: [TypeRef(0), TypeRef(0)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Invoke(PermRef(0), [])])) } }, FunctionComponent { byte_size: Some(50), scope: Local, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }] }, params: [], returns: [] }, body: Internal { byte_size: Some(18), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 3 }, applies: [TypeRef(0), TypeRef(0)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Invoke(PermRef(0), [])])) } }, FunctionComponent { byte_size: Some(24), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(3)), Physical(CapSet(3))], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(142), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(1)), Physical(CapSet(3)), Physical(CapSet(3)), Physical(CapSet(3))], import: PublicImport { modules: [Remote([190, 180, 38, 200, 248, 85, 8, 133, 170, 39, 202, 121, 15, 173, 252, 60, 218, 80, 245, 132]), Remote([212, 105, 64, 55, 22, 136, 64, 51, 174, 234, 236, 219, 216, 73, 76, 49, 192, 85, 152, 81])], types: [Data { link: DataLink { module: ModRef(1), offset: 0 }, applies: [] }, Data { link: DataLink { module: ModRef(2), offset: 0 }, applies: [] }] }, params: [], returns: [] }, body: Internal { byte_size: Some(78), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 7 }, applies: [TypeRef(3), TypeRef(3), TypeRef(3), TypeRef(3)] }, Function { link: FuncLink { module: ModRef(0), offset: 7 }, applies: [TypeRef(2), TypeRef(2), TypeRef(2), TypeRef(3)] }, Function { link: FuncLink { module: ModRef(0), offset: 7 }, applies: [TypeRef(1), TypeRef(1), TypeRef(2), TypeRef(3)] }, Function { link: FuncLink { module: ModRef(0), offset: 7 }, applies: [TypeRef(0), TypeRef(1), TypeRef(2), TypeRef(3)] }, Function { link: FuncLink { module: ModRef(0), offset: 7 }, applies: [TypeRef(4), TypeRef(5), TypeRef(2), TypeRef(3)] }], permissions: [Callable(PermSet(8), CallRef(0)), Callable(PermSet(8), CallRef(1)), Callable(PermSet(8), CallRef(2)), Callable(PermSet(8), CallRef(3)), Callable(PermSet(8), CallRef(4))] }, code: Exp(LargeVec([Invoke(PermRef(0), []), Invoke(PermRef(1), []), Invoke(PermRef(2), []), Invoke(PermRef(3), []), Invoke(PermRef(4), []), Return([])])) } }, FunctionComponent { byte_size: Some(20), scope: Guarded([GenRef(0)]), shared: FunSigShared { transactional: false, generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, params: [], returns: [] }, body: Internal { byte_size: Some(8), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Return([])])) } }, FunctionComponent { byte_size: Some(29), scope: Local, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [], returns: [] }, body: Internal { byte_size: Some(17), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 9 }, applies: [TypeRef(0)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Invoke(PermRef(0), [])])) } }, FunctionComponent { byte_size: Some(29), scope: Global, shared: FunSigShared { transactional: false, generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [] }] }, params: [], returns: [] }, body: Internal { byte_size: Some(17), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [Function { link: FuncLink { module: ModRef(0), offset: 9 }, applies: [TypeRef(0)] }], permissions: [Callable(PermSet(8), CallRef(0))] }, code: Exp(LargeVec([Invoke(PermRef(0), [])])) } }, FunctionComponent { byte_size: Some(23), scope: Local, shared: FunSigShared { transactional: false, generics: [Physical(CapSet(48)), Phantom], import: PublicImport { modules: [], types: [] }, params: [Param { consumes: true, typ: TypeRef(0) }], returns: [TypeRef(0)] }, body: Internal { byte_size: Some(9), imports: BodyImport { public: PublicImport { modules: [], types: [] }, callables: [], permissions: [] }, code: Exp(LargeVec([Move(ValueRef(0))])) } }], implements: [], fun_impl_order: BitSerializedVec([true, true, true, true, true, true, true, true, true, true, true, true, true]) }