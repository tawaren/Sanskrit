Module { byte_size: Some(195), meta: LargeVec([116, 101, 115, 116, 115, 117, 99, 99, 97, 112, 115]), data: [DataComponent { byte_size: Some(13), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(2))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(13), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(1))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(13), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [Physical(CapSet(4))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(11), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(2), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(11), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(1), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(11), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(4), generics: [], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [] }] } }, DataComponent { byte_size: Some(14), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(2), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(14), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(1), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(14), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(4), generics: [Physical(CapSet(0))], import: PublicImport { modules: [], types: [] }, body: Internal { constructors: [Case { fields: [TypeRef(0)] }] } }, DataComponent { byte_size: Some(58), create_scope: Local, consume_scope: Local, inspect_scope: Local, top: false, provided_caps: CapSet(0), generics: [], import: PublicImport { modules: [], types: [Data { link: DataLink { module: ModRef(0), offset: 3 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 6 }, applies: [TypeRef(0)] }, Data { link: DataLink { module: ModRef(0), offset: 0 }, applies: [TypeRef(1)] }, Data { link: DataLink { module: ModRef(0), offset: 4 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 7 }, applies: [TypeRef(3)] }, Data { link: DataLink { module: ModRef(0), offset: 1 }, applies: [TypeRef(4)] }, Data { link: DataLink { module: ModRef(0), offset: 5 }, applies: [] }, Data { link: DataLink { module: ModRef(0), offset: 8 }, applies: [TypeRef(6)] }, Data { link: DataLink { module: ModRef(0), offset: 2 }, applies: [TypeRef(7)] }] }, body: Internal { constructors: [Case { fields: [TypeRef(2)] }, Case { fields: [TypeRef(5)] }, Case { fields: [TypeRef(8)] }] } }], sigs: [], data_sig_order: BitSerializedVec([true, true, true, true, true, true, true, true, true, true]), functions: [], implements: [], fun_impl_order: BitSerializedVec([]) }