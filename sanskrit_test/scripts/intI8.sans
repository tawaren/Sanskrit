system module IntI8 {
    public extType(1) <Copy,Drop,Persist,Primitive,Value,Unbound> I8;

    public extFun eq(num1:.I8, num2:.I8):(res:Bool.Bool);
    public extFun lt(num1:.I8, num2:.I8):(res:Bool.Bool);
    public extFun lte(num1:.I8, num2:.I8):(res:Bool.Bool);
    public extFun gt(num1:.I8, num2:.I8):(res:Bool.Bool);
    public extFun gte(num1:.I8, num2:.I8):(res:Bool.Bool);

    public transactional extFun add(num1:.I8, num2:.I8):(res:.I8);
    public transactional extFun sub(num1:.I8, num2:.I8):(res:.I8);
    public transactional extFun div(num1:.I8, num2:.I8):(res:.I8);
    public transactional extFun mul(num1:.I8, num2:.I8):(res:.I8);

    public extFun and(num1:.I8, num2:.I8):(res:.I8);
    public extFun or(num1:.I8, num2:.I8):(res:.I8);
    public extFun xor(num1:.I8, num2:.I8):(res:.I8);
    public extFun not(num1:.I8):(res:.I8);

    public extFun toData(num:.I8):(res:Data.Data1);
    public extFun fromData(data:Data.Data1):(res:.I8);

    public extFun hash(num:.I8):(res:Data.Data20);

}