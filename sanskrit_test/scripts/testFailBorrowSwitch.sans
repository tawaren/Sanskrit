module TestFailBorrowSwitch {

    type <Embed> X[<Embed> A] {
        X1(A);
        X2(A);
    };

    private fun Test[<Embed> A](a:.X[.X[A]]):(borrowed(a) b:A){
       b = &switch a:.X[.X[A]] {
            X1(a) => {
                return a;
            };
            X2(a) => {
                return a;
            };
       };
       c = switch b:.X[A] {
            X1(a) => {
                return a;
            };
            X2(a) => {
                return a;
            };
       };
       return c;
    };
}