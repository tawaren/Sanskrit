system module IntU8 {
    public extType(1) <Copy,Drop,Persist,Primitive,Value,Unbound> U8;

    public extFun eq(num1:.U8, num2:.U8):(res:Bool.Bool);
    public extFun lt(num1:.U8, num2:.U8):(res:Bool.Bool);
    public extFun lte(num1:.U8, num2:.U8):(res:Bool.Bool);
    public extFun gt(num1:.U8, num2:.U8):(res:Bool.Bool);
    public extFun gte(num1:.U8, num2:.U8):(res:Bool.Bool);

    public transactional extFun add(num1:.U8, num2:.U8):(res:.U8);
    public transactional extFun sub(num1:.U8, num2:.U8):(res:.U8);
    public transactional extFun div(num1:.U8, num2:.U8):(res:.U8);
    public transactional extFun mul(num1:.U8, num2:.U8):(res:.U8);

    public extFun and(num1:.U8, num2:.U8):(res:.U8);
    public extFun or(num1:.U8, num2:.U8):(res:.U8);
    public extFun xor(num1:.U8, num2:.U8):(res:.U8);
    public extFun not(num1:.U8):(res:.U8);

    public extFun toData(NUM:.U8):(res:Data.Data1);
    public extFun fromData(data:Data.Data1):(res:.U8);

    public extFun hash(NUM:.U8):(res:Data.Data20);

}